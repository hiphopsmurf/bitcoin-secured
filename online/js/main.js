// Generated by CoffeeScript 1.5.0
(function() {
  var FormCtrl, RegisterCtrl, SubmitCtrl, TextCtrl, app;

  app = angular.module("bitcoinSecured", []);

  app.factory("txevent", [
    '$window', function($window) {
      return {
        notify: function(msg) {
          return $window.alert(msg);
        },
        doTrans: function(tx_dest, tx_sec, tx_addr, tx_unspent) {
          var eckey, secret, sendTx, tx;
          secret = $window.Bitcoin.Base58.decode(tx_sec).slice(1, 33);
          eckey = new $window.Bitcoin.ECKey(secret);
          tx = new $window.TX(eckey);
          tx.parseInputs(tx_unspent, tx.getAddress());
          tx.addOutput(tx_dest, 0.1);
          sendTx = tx.construct();
          return console.log($window.Crypto.util.bytesToHex(sendTx.serialize()));
        }
      };
    }
  ]);

  app.factory("qrcode", [
    '$window', function($window) {
      return {
        renderQR: function(msg) {
          return $window.qr = new $window.QRCode($("#qr-code").get(0), msg);
        },
        hideQR: function() {
          return $window.qr.clear();
        }
      };
    }
  ]);

  app.controller("RegisterCtrl", RegisterCtrl = function($scope, $location) {
    $scope.appdata = {};
    $scope.steps = ["Enter Data", "Enter Paste"];
    $scope.selection = $scope.steps[0];
    $scope.getCurrentStepIndex = function() {
      return _.indexOf($scope.steps, $scope.selection);
    };
    $scope.goToStep = function(index) {
      if (!_.isUndefined($scope.steps[index])) {
        return $scope.selection = $scope.steps[index];
      }
    };
    $scope.hasNextStep = function() {
      var nextStep, stepIndex;
      stepIndex = $scope.getCurrentStepIndex();
      nextStep = stepIndex + 1;
      return !_.isUndefined($scope.steps[nextStep]);
    };
    $scope.hasPreviousStep = function() {
      var previousStep, stepIndex;
      stepIndex = $scope.getCurrentStepIndex();
      previousStep = stepIndex - 1;
      return !_.isUndefined($scope.steps[previousStep]);
    };
    $scope.incrementStep = function() {
      var nextStep, stepIndex;
      if ($scope.hasNextStep()) {
        stepIndex = $scope.getCurrentStepIndex();
        nextStep = stepIndex + 1;
        return $scope.selection = $scope.steps[nextStep];
      }
    };
    return $scope.decrementStep = function() {
      var previousStep, stepIndex;
      if ($scope.hasPreviousStep()) {
        stepIndex = $scope.getCurrentStepIndex();
        previousStep = stepIndex - 1;
        return $scope.selection = $scope.steps[previousStep];
      }
    };
  });

  app.controller("FormCtrl", FormCtrl = function($scope, $http, qrcode) {
    $scope.rawtx = "";
    $scope.transaction = {};
    $scope.loadUrl = function() {
      var q, tx;
      q = "/blockchain/unspent?address=" + $scope.transaction.address;
      tx = {};
      tx.dest = $scope.transaction.recipient;
      tx.addr = $scope.transaction.address;
      tx.amount = $scope.transaction.amount;
      tx.fee = $scope.transaction.fee;
      $http.get(q).success(function(data, status) {
        console.log(data);
        console.log(status);
        tx.unspent = data;
        $scope.rawtx = JSON.stringify(tx);
        return qrcode.renderQR(tx);
      });
      return true;
    };
    return $scope.processForm = function() {
      console.log("processing form");
      return $scope.loadUrl();
    };
  });

  app.controller("TextCtrl", TextCtrl = function($scope, qrcode) {
    return $scope.renderTx = function() {
      var tx;
      tx = $scope.data.tx;
      $scope.rawtx = JSON.stringify(tx);
      return qrcode.renderQR(tx);
    };
  });

  app.controller("SubmitCtrl", SubmitCtrl = function($scope, txevent) {});

}).call(this);
